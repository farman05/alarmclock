{"version":3,"sources":["mp3/beep.mp3","component/common/clockfooter.js","component/common/clockheader.js","constant/index.js","helper/index.js","storage/index.js","component/clock/index.js","component/home/index.js","component/alarm/list.js","component/alarm/index.js","component/alarmform/validation.js","component/alarmform/useForm.js","component/alarmform/index.js","route/route.js","component/triggeralarm/index.js","component/layout/index.js","route/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ClockFooter","props","history","useHistory","className","Row","Col","xs","Button","href","onClick","push","variant","size","disabledAlarm","ClockHeader","leftFunc","leftTitle","title","rightFunc","rightTitle","daysArray","id","name","type","soundArray","sound","Beep","getDayOfWeek","moment","format","getCurrentTIme","chkWeekendOnly","day","weekendArray","filter","v","k","toLowerCase","weekendLength","length","w","q","includes","toString","getSoundFile","soundId","result","findIndex","x","getAlarm","key","alarmList","localStorage","getItem","JSON","parse","removeSingleAlarm","index","fetchAlaram","splice","setItem","stringify","Clock","useState","time","setTime","date","setDate","currentDate","useEffect","currentTime","setTimeout","Card","Body","Text","Home","AlarmList","setAlarmList","getAllAlarm","isList","newList","map","formatTime","hr","mm","modifyResult","list","sort","a","b","Date","slice","activeInactive","e","value","status","is_active","activeInactiveAlarm","ListGroup","Item","style","background","label","flatMap","o","join","Form","Group","controlId","Check","onChange","checked","Alarm","setIsList","flag","console","log","validate","values","errors","ss","useForm","callback","setValues","setErrors","isSubmitting","setIsSubmitting","Object","keys","handleChange","event","persist","target","handleSubmit","preventDefault","AlarmForm","setCheckboxFlag","dayArray","setDayArray","editId","setEditId","isEdit","setEditFlag","match","params","fetchData","data","inputs","snooze","handleCheckboxChange","selectDayArray","val","dropDown","start","option","i","ErrorDiv","updateAlarm","newAlarmList","setAlarm","alert","validation","onSubmit","noValidate","Control","as","indexOf","block","routes","path","component","AlarmScreen","alarm","Audio","audio","setAudio","isStop","setStop","interval","setInterval","callInterval","clearInterval","play","getAllAlarmData","alarmData","alarmArray","now","currentDay","j","l","parseInt","fetchCurrentAlarm","audioPlay","pause","Layout","Container","sm","children","RouterApp","fallback","exact","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c111517d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/beep.238acd50.mp3\";","import React from 'react'\nimport { useHistory } from \"react-router-dom\";\n\nimport {Row,Col,Button} from 'react-bootstrap'\nconst ClockFooter = (props)=>{\n    const history = useHistory();\n\n        return(\n            <div className = \"clockFooter\">\n                <Row>   \n                    <Col xs = {6}>\n                        <Button href=\"#\" onClick = {()=>history.push('/')} variant=\"link\" size=\"lg\">\n                            Clock\n                        </Button>\n                    </Col>\n                    <Col xs = {6}>\n                        {!props.disabledAlarm &&\n                        <Button onClick = {()=>history.push('/alarmList')} href=\"#\" variant=\"link\" size=\"lg\">\n                            Alarm\n                        </Button>\n                        }\n                    </Col>\n                </Row>\n            </div>\n        )\n}\n\nexport default ClockFooter;","import React from 'react'\nimport { useHistory } from \"react-router-dom\";\n\nimport {Row,Col,Button} from 'react-bootstrap'\nconst ClockHeader = (props)=>{\n    const history = useHistory();\n\n\n       return(\n            <div className = \"clockHeader\">\n                <Row>\n                    <Col xs = {3}>\n                        {/* {props.leftTitle && */}\n                        <Button onClick = {()=>props.leftFunc ? props.leftFunc() : ''} href=\"#\" variant=\"link\" size=\"lg\">\n                                {props.leftTitle}&nbsp;\n                        </Button>\n                        {/* } */}\n                    </Col>\n                    <Col xs = {6}>\n                       <div className = \"header-title\">{props.title}</div>\n                    </Col>\n                    <Col xs = {3}>\n                        <Button onClick = {()=>props.rightFunc ? props.rightFunc() : ''} href=\"#\" variant=\"link\" size=\"lg\">\n                                {props.rightTitle}\n                        </Button>\n                    </Col>\n                </Row>    \n            </div>\n       ) \n\n\n        return(\n            <div className = \"clockHeader\">\n                {props.isList ?\n                    <Row>   \n                        <Col>\n                            <Button onClick = {()=>props.editList(!props.isList)} href=\"#\" variant=\"link\" size=\"lg\">\n                                Edit\n                            </Button>\n                        </Col>\n                        <Col>\n                            <Button onClick = {()=>history.push('/addAlarm')} href=\"#\" variant=\"link\" size=\"lg\">\n                                Add\n                            </Button>\n                        </Col>\n                    </Row>\n                :\n                <Row>   \n                    <Col xs = {6}>\n                        <Button onClick = {()=>props.editList(!props.isList)} href=\"#\" variant=\"link\" size=\"lg\">\n                            Done                        \n                        </Button>\n                    </Col>\n                </Row>\n                }\n            </div>\n        )\n}\n\nexport default ClockHeader;","import Beep from '../mp3/beep.mp3'\nexport const daysArray = [\n    {\n        id:1,\n        name:\"Monday\",\n        type:\"WeekDay\"\n    }, \n    {\n        id:2,\n        name:\"Tuesday\",\n        type:\"WeekDay\"\n    },\n    {\n        id:3,\n        name:\"Wednesday\",\n        type:\"WeekDay\"\n    },\n    {\n        id:4,\n        name:\"Thursday\",\n        type:\"WeekDay\"\n    },\n    {\n        id:5,\n        name:\"Friday\",\n        type:\"WeekDay\"\n    },\n    {\n        id:6,\n        name:\"Saturday\",\n        type:\"Weekend\"\n    },\n    {\n        id:7,\n        name:\"Sunday\",\n        type:\"Weekend\"\n    },\n]\n\nexport const soundArray = [\n                {\n                    id:1,\n                    name:'None',\n                    sound:''\n                },\n                {\n                    id:2,\n                    name:'Beep',\n                    sound:Beep\n                },\n                {\n                    id:3,\n                    name:'Razer',\n                    sound:Beep\n                }\n\n]","import moment from 'moment';\nimport {daysArray,soundArray} from '../constant'\nexport const getDayOfWeek = ()=>{\n    return moment().format('dddd DD MMM, YYYY');\n\n}\n\nexport const getCurrentTIme = ()=>{\n    return  moment().format(\"HH:mm:ss\");\n\n}\n\n\nexport const getDayLabel = (day)=>{\n        \n        //check length of day with week array if length matches means alarm is set for every day\n        if(day.length == daysArray.length){\n            return 'EveryDay'\n        }\n        \n        if(chkWeekendOnly(day,'weekend')){\n              return \"WeeKends\"  \n        }\n\n        if(chkWeekendOnly(day,'weekday')){\n            return \"Weekdays\"  \n        }\n\n         const label = daysArray.flatMap(o => day.includes(o.id.toString()) ? [o.name] : []).join(\",\");\n         return label;\n\n\n\n}\n\nconst chkWeekendOnly = (day,type)=>{\n\n        const weekendArray =  daysArray.filter((v,k)=>{ return v.type.toLowerCase() == type });\n        const weekendLength = weekendArray.length\n        if(weekendLength == day.length){\n               const matchLength = weekendArray.filter((w,q)=>{  return day.includes(w.id.toString())  })\n               return weekendLength == matchLength.length ? true : false \n        }else{\n            return false;\n        }\n}\n\nexport const fetchCurrentAlarm = (alarmArray)=>{\n    //get day hr minute am/pm\n    const day =  moment().format('dddd')\n    const now =  moment().format('hh:mm:A');\n    const currentDay = daysArray.filter((i,j)=>{ return i.name.toLowerCase() == day.toLowerCase()})\n    const result = alarmArray.filter((v,k)=>{\n                return v.day.includes(currentDay[0].id.toString()) && v.is_active == 1;\n    })\n    let alarmData = \"\" \n    if(result.length){\n       result.map((o,l)=>{\n                const settime = o.hr + ':' + o.mm + ':' + o.time\n                if(settime == now){\n                    alarmData =  o\n                    alarmData.sound =  getSoundFile(parseInt(alarmData.sound))\n                   \n                }\n        })\n    }\n    return alarmData\n\n}\n\nexport const getSoundFile = (soundId)=>{\n            const result = soundArray[soundArray.findIndex(x=>x.id == (soundId))]\n            return result ? result.sound : ''\n} \n\n","export const setAlarm = (key,data)=>{\n\n        const fetchAlaram =  getAlarm(key);\n        const newAlarmList = [...fetchAlaram,data];\n        return localStorage.setItem(key,JSON.stringify(newAlarmList));\n\n}\n\nexport const getAlarm = (key)=>{\n\n    const alarmList = localStorage.getItem(key);\n    if(alarmList){\n        return JSON.parse(alarmList)\n    }else{\n        return []\n    }\n}\n\nexport const removeAllAlarm = (key)=>{\n    localStorage.removeItem(key);\n\n}\n\nexport const removeSingleAlarm = (key,index)=>{\n    const fetchAlaram =  getAlarm(key);\n    fetchAlaram.splice(index, 1);\n    localStorage.setItem(key, JSON.stringify(fetchAlaram));\n\n}\n\nexport const activeInactiveAlarm = (key,index,status)=>{\n            const result = getAlarm(key);\n            result[index].is_active = status\n            localStorage.setItem(key, JSON.stringify(result));\n\n}\n\nexport const updateAlarm = (key,index,values)=>{\n    const result = getAlarm(key);\n    result[index] = values\n    localStorage.setItem(key, JSON.stringify(result));\n\n}","import React,{useState,useEffect} from 'react'\nimport {Card} from 'react-bootstrap';\nimport ClockFooter from '../common/clockfooter';\nimport ClockHeader from '../common/clockheader';\n\nimport {getDayOfWeek,getCurrentTIme,fetchCurrentAlarm} from '../../helper'\nimport {getAlarm} from '../../storage'\nconst Clock = (props)=>{\n        \n    const [time,setTime] = useState()    \n    const [date,setDate] = useState()\n\n\n\n    //get current time\n    const currentTime  =()=>  {\n            setTime(getCurrentTIme())\n            setTimeout(function(){ currentTime();currentDate() }, 1000); \n    }\n\n    //get current date\n    const currentDate = ()=>{\n        setDate(getDayOfWeek());\n\n    }\n\n    useEffect(()=>{\n        currentTime()\n        currentDate()\n    },[])\n      \n      \n       \n        return(\n            <>\n                <Card className=\"text-center\">\n                    <ClockHeader title = \"Clock\" />\n                    <Card.Body>\n                        <Card.Text className = \"clock-time\">\n                            {time}\n                        </Card.Text>\n                        <Card.Text className = \"clock-date\">\n                            {date}\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n                <ClockFooter/>\n               \n            </>\n        )\n}\n\nexport default Clock;","import React from 'react'\nimport Clock from '../clock'\n\nconst Home = (props)=>{\n        return(\n            <>\n             <Clock props = {props}/>\n            </>\n        )\n}\n\nexport default Home;","import React ,{useState,useEffect} from 'react'\nimport {Card,ListGroup,Row,Col,Form} from 'react-bootstrap'\nimport {getAlarm,removeSingleAlarm,activeInactiveAlarm} from '../../storage'\nimport { useHistory } from \"react-router-dom\";\nimport {getDayLabel} from '../../helper'\nconst AlarmList = (props)=>{\n\n    const [alarmList,setAlarmList] = useState([]);\n    const history = useHistory();\n\n    useEffect(()=>{\n        getAllAlarm()\n    },[props.isList])\n\n    const getAllAlarm = ()=>{\n        const result = getAlarm('alarm');\n        const newList = result.map((v,k)=>{\n                return {\n                        ...v,\n                        formatTime:v.hr + ':' + v.mm + ':' + v.time,\n                        index:k\n                }\n        })\n        modifyResult(newList)\n    }\n\n    //sorting by time \n    const modifyResult = (list)=>{\n        list.sort(function(a, b) {\n            return Date.parse('1970/01/01 ' + a.formatTime.slice(0, -2) + ' ' + a.formatTime.slice(-2)) - Date.parse('1970/01/01 ' + b.formatTime.slice(0, -2) + ' ' + b.formatTime.slice(-2))\n          });\n          setAlarmList(list)\n    }\n\n    const activeInactive = (e,value)=>{\n            activeInactiveAlarm('alarm',value.index,!value.is_active)\n            getAllAlarm()\n    }\n\n    const removeAlarm = (index)=>{\n        removeSingleAlarm('alarm',index)\n        getAllAlarm()\n\n    }\n\n\n    const alarmListElement = ()=>{\n\n        return(\n            alarmList.map((v,k)=>{\n                return(\n                    <ListGroup.Item key = {v.index} style = {{background:`${v.is_active == 0 ? '#f9f9f9' : 'transparent'}`}}>\n                        <Row className=\"justify-content-md-left\">\n                            {!props.isList &&\n                                <Col xs = {2} className = \"text-left\">\n                                    <span onClick = {()=>removeAlarm(v.index)} className = \"fa fa-times removeIcon\"></span>\n                                </Col>\n                            }\n                            <Col  className = \"text-left\">\n                                <div>\n                                <strong>{`${v.hr}:${v.mm}`}</strong><sub>{ v.time}</sub>\n                                </div>\n                                <div>{v.label ? v.label : ''}{ ', '+getDayLabel(v.day)}</div>\n                            </Col>\n                            {props.isList ?\n                                <Col >\n                                    <Form.Group controlId=\"formBasicCheckbox\">\n                                        <Form.Check onChange = {(e)=>activeInactive(e,v)} value={v.is_active} checked={v.is_active ? true : false} type=\"checkbox\"/>\n                                    </Form.Group>\n                                </Col>\n                            :\n                                <Col xs = {2} className = \"text-right\">\n                                    <span  className = \"fa fa-arrow-right \" onClick = {()=>history.push(`/editAlarm/${+v.index + 1}`)}></span>\n                                </Col>\n                            }\n                        </Row>\n                    </ListGroup.Item>\n                )\n        })\n        )\n    }\n\n\n\n\n    return(\n            <>\n             <Card>\n                    <ListGroup variant=\"flush\">\n                    {alarmList && alarmList.length ?\n                        alarmListElement()\n                    :\n                    <ListGroup.Item >\n                       <div className = \"no-alarm\"> No Alarms Set</div>\n                    </ListGroup.Item>    \n                    }\n                    </ListGroup>\n                </Card>\n            </>\n        )\n}\n\nexport default AlarmList;","import React,{useEffect,useState} from 'react'\nimport ClockHeader from '../common/clockheader';\nimport ClockFooter from '../common/clockfooter';\nimport {Card,ListGroup} from 'react-bootstrap'\nimport AlarmList from './list'\nconst Alarm = (props)=>{\n    const [isList,setIsList] = useState(true);\n    \n    const editPage = (flag)=>{\n        setIsList(!isList);\n        console.log('sadasdas')\n    }\n    \n    return(\n            <>\n                <ClockHeader leftTitle = {isList ? \"Edit\" : \"Done\"} leftFunc = {editPage}  title = \"Alarm List\"  rightTitle = \"Add\" rightFunc = { ()=>{props.history.push('/addAlarm')} }/>   \n                <AlarmList   isList = {isList}  />\n                <ClockFooter disabledAlarm = {true} />\n            </>\n        )\n}\n\nexport default Alarm;","export default function validate(values) {\n    let errors = {};\n    if (!values.hr) {\n        errors.hr = 'Hour is required';\n    }\n\n    if (!values.mm) {\n        errors.mm = 'Minute is required';\n    }\n\n    if (!values.time) {\n        errors.ss = 'Time is required';\n    }\n\n    if (!values.day) {\n        errors.day = 'Day is required';\n    }\n\n    if (!values.sound) {\n        errors.sound = 'Sound is required';\n    }\n  \n    if (!values.label) {\n        errors.label = 'Label is required';\n    }\n\n    return errors;\n}","import { useState, useEffect } from 'react';\n\nconst useForm = (callback, validate) => {\n\n  const [values, setValues] = useState({});\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n      return;\n    }\n    setIsSubmitting(false);\n    \n  }, [errors]);\n\n  const handleSubmit = (event) => {\n    if (event) event.preventDefault();\n    setErrors(validate(values));\n    setIsSubmitting(true);\n  };\n\n  const handleChange = (event) => {\n    event.persist();\n    if(event.target.name == \"snooze\"){\n        setValues(values => ({ ...values, [event.target.name]: event.target.checked }));\n    }else{\n        setValues(values => ({ ...values, [event.target.name]: event.target.value }));\n    }\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors,\n    isSubmitting,\n    setIsSubmitting,\n    setErrors,\n    setValues\n  }\n};\n\nexport default useForm;","import React,{useState,useEffect} from 'react'\nimport {Card,Row,Col,Form,ListGroup,Button} from 'react-bootstrap'\nimport {daysArray,soundArray} from '../../constant';\nimport ClockHeader from '../common/clockheader';\nimport validation from './validation';\nimport useForm from './useForm'\nimport {setAlarm,removeAllAlarm,getAlarm,updateAlarm,removeSingleAlarm} from '../../storage'\nconst AlarmForm = (props)=>{\n    const [checkboxFlag, setCheckboxFlag] = useState(\"\");\n    const [dayArray,setDayArray] = useState([])\n    const [alarmData,setAlaramData] = useState({})\n    const [editId,setEditId] = useState('')\n    const [isEdit,setEditFlag] = useState(false) \n    useEffect(()=>{\n        const {match:{params:{id}}} = props;\n        console.log({id});\n        if(id){\n            fetchData(id-1)\n\n        }\n    },[])\n\n    const fetchData = (index)=>{\n            console.log({index})  \n            const result = getAlarm('alarm');\n            const data = result[index];\n            if(data){\n                setEditId(index)\n                setEditFlag(true)\n                setValues(inputs=>({\n                        hr:data.hr,\n                        mm:data.mm,\n                        time:data.time,\n                        day:data.day,\n                        sound:data.sound,\n                        snooze:data.snooze ? data.snooze : '',\n                        label:data.label ? data.label : '',\n\n\n                }))\n            }\n\n\n    }\n\n\n    //setting day array \n    const handleCheckboxChange = e => {\n        let selectDayArray = [];\n        if (e.target.checked) {\n            selectDayArray = [...dayArray, e.target.value];\n        } else {\n            selectDayArray = dayArray.filter(function (val) {\n                return val !== e.target.value\n            })\n        }\n\n        setDayArray(selectDayArray);\n        setValues(inputs => ({\n            ...inputs,\n            day: selectDayArray\n        }))\n        if (selectDayArray.length >= 1) {\n            setCheckboxFlag(1);\n        } else {\n            setCheckboxFlag(\"\");\n        }\n    }\n\n\n\n    //save form\n    const save = ()=>{\n        try{\n            values.is_active = 1;\n            if(isEdit){\n                updateAlarm('alarm',editId,values)\n            }else{\n                setAlarm('alarm',values)\n            }\n            props.history.push('/alarmList')\n        }catch(e){\n            alert('Error while adding an alarm')\n        }\n    }\n\n    const removeAlarm = (index)=>{\n        removeSingleAlarm('alarm',editId)\n        props.history.push('/alarmList')\n\n\n    }\n\n\n    //day listing\n    const dayList = ()=>{\n\n            return(\n                <Card>\n                    <ListGroup variant=\"flush\">\n                    {daysArray.map((v,k)=>{\n                        const {day = []} = values \n                        return(\n                            <ListGroup.Item key = {v.id}>\n                                <Row className=\"justify-content-md-left\">\n                                    <Col xs = {8} className = \"text-left\">\n                                        {v.name}\n                                    </Col>\n                                    <Col xs = {4}>\n                                    <Form.Group controlId=\"formBasicCheckbox\">\n                                        <Form.Check  name = {`day[${k}]`} value = {v.id} onChange = {handleCheckboxChange} type=\"checkbox\" checked={day.indexOf(v.id.toString()) >= 0 ? true : ''} />\n                                    </Form.Group>\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n                        )\n                    })}\n                    </ListGroup>\n                </Card>\n            )\n    }\n\n    const soundList = ()=>{\n\n        return(\n            <Card>\n                <ListGroup variant=\"flush\">\n                {soundArray.map((v,k)=>{\n                        const {sound = []} = values \n\n                    return(\n                        <ListGroup.Item key = {v.id}>\n                            <Row className=\"justify-content-md-left\">\n                                <Col xs = {8} className = \"text-left\">\n                                    {v.name}\n                                </Col>\n                                <Col xs = {4}>\n                                <Form.Group controlId=\"formBasicCheckbox\">\n                                    <Form.Check type='radio' name = {`sound`} value = {v.id} onChange = {handleChange}\n                                    checked={sound.indexOf(v.id.toString()) >= 0 ? true : ''}\n                                    />\n                                </Form.Group>\n                                </Col>\n                            </Row>\n                        </ListGroup.Item>\n                    )\n                })}\n                </ListGroup>\n            </Card>\n        )\n}\n\n    const dropDown = (length = 0,start=0)=>{\n\n            let option = []\n\n            for(let i = start;i<=length;i++){\n                const value = i < 10 ? '0'+i : i\n                option.push(\n                        <option key = {value} value = {value}>{value}</option>\n                )\n            }\n\n            return option;\n    }\n\n    const ErrorDiv = ({name})=>{\n\n        if(errors[name]){\n            return(\n                <span className = \"error\">{errors[name]}</span>\n            )\n        }else{\n            return(null)\n        }\n    }\n\n    const {\n        values,\n        errors,\n        handleChange,\n        handleSubmit,\n        setValues,\n        setErrors,\n        setIsSubmitting,\n        isSubmitting\n    } = useForm(save, validation);\n    console.log({values},'adads')\n        return(\n\n            <>\n            <Form onSubmit={handleSubmit} noValidate>\n             <Card>\n                <ClockHeader leftTitle = {\"Cancel\"} leftFunc = { ()=>{props.history.push('/alarmList')} } title = {\"Add/Edit Alarm\"}/>  \n                <Card.Body>\n                            <Row>    \n                                <Col xs = {4}>\n                                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                                        <Form.Control value = {values.hr ||  '' } name = \"hr\" onChange = {handleChange} as=\"select\">\n                                        <option>HH</option>\n                                        {dropDown(12,1)}\n                                        </Form.Control>\n                                        <ErrorDiv name = \"hr\" />\n                                    </Form.Group>\n                                </Col>\n                                <Col xs = {4}>\n                                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                                        <Form.Control value = {values.mm ||  ''}  name = \"mm\" onChange = {handleChange} as=\"select\">\n                                        <option>MM</option>\n                                        {dropDown(59)}\n                                        </Form.Control>\n                                        <ErrorDiv name = \"mm\" />\n\n                                    </Form.Group>\n                                </Col>\n                                <Col xs = {4}>\n                                    <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                                        <Form.Control value = {values.time ||  ''} name = \"time\" onChange = {handleChange} as=\"select\">\n                                        <option>Time</option>\n                                        <option value = \"AM\">AM</option>\n                                        <option value = \"PM\">PM</option>\n\n                                        </Form.Control>\n                                        <ErrorDiv name = \"ss\" />\n                                    </Form.Group>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col xs = {8} className = \"text-left\">\n                                        <label>Snooze</label>\n                                </Col>\n                                <Col xs = {4}>\n                                    <Form.Group controlId=\"formBasicCheckbox\">\n                                            <Form.Check name = \"snooze\" value = {values.snooze ||  ''}   onChange = {handleChange} checked={values.snooze ? true : false} type=\"checkbox\"/>\n                                        </Form.Group>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col xs = {4} className = \"text-left\">\n                                    <label>Label</label>\n                                </Col>\n                                <Col xs = {8}>\n                                <Form.Group controlId=\"formBasicCheckbox\">\n                                        <Form.Control name = \"label\"  value = {values.label || ''}  onChange = {handleChange}  type=\"text\"  />\n                                    <ErrorDiv name = \"label\" />\n                                \n                                </Form.Group>\n                                </Col>\n                            </Row>\n                    {/* </Card.Text> */}\n                </Card.Body>\n            </Card>\n            <div className = \"mt15\">\n                <div className = \"alrDiv\">\n                    Repeat Time\n                </div>    \n                <ErrorDiv name = \"day\" />\n                {dayList()}\n            </div>\n            <div className = \"mt15\">\n                <div className = \"alrDiv\">\n                    Sound\n                </div>\n                <ErrorDiv name = \"sound\" />\n                {soundList()}\n            </div>\n            <div>\n                <Button variant=\"outline-primary\" type = \"submit\"  block>{isEdit ? 'Update' : 'Save'}</Button>\n            </div>\n            <div>\n                <Button variant={`outline-${isEdit ? 'danger' : 'primary'}`} onClick = {()=>{isEdit ? removeAlarm() : props.history.push('/alarmList')}} block>{isEdit ? 'Delete' : 'Cancel'}</Button>\n            </div>\n            </Form>\n\n            </>\n        )\n}\n\nexport default AlarmForm;","import { lazy } from 'react';\nimport Home from '../component/home'\nimport AlarmList from '../component/alarm'\nimport AlarmForm from '../component/alarmform'\n\nexport var routes = [\n    {\n        path: '/',\n        component: Home,\n    },\n    {\n        path: '/alarmList',\n        component: AlarmList,\n    },\n    {\n        path: '/addAlarm',\n        component: AlarmForm,\n    },\n    {\n        path: '/editAlarm/:id',\n        component: AlarmForm,\n    },\n  \n  \n]\n","import React,{useState,useEffect} from 'react'\nimport {Card,Button} from 'react-bootstrap';\nimport {fetchCurrentAlarm,getDayOfWeek,getCurrentTIme} from '../../helper'\nimport {getAlarm} from '../../storage';\nimport Clock from '../clock'\nconst AlarmScreen = (props)=>{\n        \n    const [alarm,setAlarm ] = useState({});\n    const [audio,setAudio] = useState(new Audio(''))\n    const [time,setTime] = useState()    \n    const [date,setDate] = useState()\n    const [isStop,setStop] = useState(false);\n\n\n    //get current time\n    const currentTime  =()=>  {\n            setTime(getCurrentTIme())\n    }\n\n    //get current date\n    const currentDate = ()=>{\n        setDate(getDayOfWeek());\n\n    }\n\n    useEffect(()=>{\n\n        const interval = setInterval(() => {\n            callInterval()\n          }, 1000);\n          return () => clearInterval(interval);\n       \n    },[time])\n\n\n    const callInterval = ()=>{\n        if(audio && (alarm && alarm.hr)){\n                // consol/e.log('heree')\n                audio.play()\n        }\n        currentTime()\n        currentDate()\n        if(!alarm.hr && !isStop){\n            getAllAlarmData()\n        }\n         \n    }\n\n\n\n    const getAllAlarmData = ()=>{\n        const result = getAlarm('alarm')\n        const alarmData = fetchCurrentAlarm(result)\n        if(alarmData && !isStop){\n            if(alarmData.sound){\n               let  audioPlay = new Audio(alarmData.sound);\n                setAudio(audioPlay)\n            }\n            setAlarm(alarmData)\n        }\n\n    }\n\n    const stopAlarm = ()=>{\n        setAlarm('')\n        if(audio){\n            audio.pause()\n        }\n        setAudio(new Audio(''))\n        setStop(true)\n\n        setTimeout(()=>{\n             setStop(false);\n        },60000)\n    }\n\n\n      \n\n        return(\n            <>\n            {alarm && alarm.hr ?    \n            <div className=\"text-center alaram-card alarm-screen h100\">\n                <div className = \" alarm-screen alaram-card alarm-screen-div h100\">    \n                    <Card className=\"text-center alaram-card h100\">\n                        <Card.Body>\n                            <Card.Text>\n                                {time}\n                            </Card.Text>\n                            <Card.Text>\n                                {date}\n                            </Card.Text>\n                            <Card.Text className = \"alarm-label\" >\n                                <span>{alarm.label}</span>\n                            </Card.Text>\n                            <div>\n                                {alarm.snooze &&\n                                    <Button variant=\"outline-primary\" onClick = {()=>{alert('Work in Progress')}}  block>Snooze</Button>\n                                }\n                                    <Button variant=\"outline-primary\" onClick = {()=>stopAlarm()} block>Stop</Button>\n\n                            </div>\n                        </Card.Body>\n                    </Card>\n                </div>\n            </div>\n            :\n            null \n            }\n            </>\n        )\n}\n\nexport default AlarmScreen;","import React,{useEffect, useState} from 'react'\nimport {Container,Row,Col} from 'react-bootstrap';\nimport AlarmScreen from '../triggeralarm'\nconst Layout = (props)=>{\n\n        return(\n            <Container>\n                 <Row>\n                    <Col></Col>\n                    <Col className = \"children\" sm = {6} xs={12}>\n                      {props.children}\n                       <AlarmScreen/>\n                    </Col>\n                    <Col></Col>\n                </Row>\n            </Container>\n           \n        )\n}\n\nexport default Layout;","import React, { Suspense } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\n// import RouteWithLayout  from './RouteWithLayout';\nimport { routes } from './route';\n// const Login = lazy(() => import('../components/login'));\n// const Dashboard = lazy(() => import('../components/dashboard'));\nimport Layout from '../component/layout'\n\nconst RouterApp = (props) => {\n    return (\n        <div className=\"App\">\n            <Router>\n                <Suspense fallback={<div>Loading...</div>}>\n                    <Switch>\n                        <Layout>\n\n                        {\n                            routes.map((v, k) => {\n                                    return (\n                                        <Route key={k} path={v.path} component={v.component} exact={true} />\n                                    )\n                            })\n                        }\n                        </Layout>\n                    </Switch>\n                </Suspense>\n            </Router>\n        </div>\n    )\n}\n\n\n\nexport default RouterApp; ","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Route from './route'\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Route/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}